
RecordEdits

Define DiscreteDistribution { RouteDecosionTaking }
Define DiscreteUniformDistribution { EntriesPerArrivalDistribution }
Define ExponentialDistribution { GeneratorDistribution  TicketCounterDistribution }
Define UniformDistribution { FoodCounterDistribution }
Define AddTo { AddTo1  AddTo2 }
Define Assign { Check }
Define Branch { EntranceGate  RouteToRides }
Define EntityContainer { EntityContainer1  EntityContainer2 }
Define EntityConveyor { wayToCableCar  wayToCarousel  wayToFerriswheel  wayToFoodCounter  wayToGo  wayToRolarCoaster  wayToWaterSlide }
Define EntityGenerator { EntityGenerator1  EntityGenerator2  VisitorArrivalGenerator }
Define EntityLogger { EntityLogger1 }
Define EntityProcessor { CableCar  FerrisWheel  FoodCounter  WaterSlider }
Define EntitySink { EntitySink1 }
Define Queue { CableQ  CarouselQ  EntranceQueue1  EntranceQueue2  EntranceQueue3  EntranceQueue4  FerrisQ  FoodQ  Queue1  Queue2  Queue3  Queue4  Queue5  Queue6  RolarQ  WaterQ }
Define RemoveFrom { RemoveFrom1  RemoveFrom2 }
Define Server { Carousel  EntranceTicketCounter1  EntranceTicketCounter2  EntranceTicketCounter3  EntranceTicketCounter4  RolarCoaster }
Define SimEntity { Visitor }
Define Statistics { Statistics1 }
Define Resource { CableCarBox  FreesiWheelCone  Slider }
Define ColladaModel { Axis  Grid100x100 }
Define ImageModel { 921109-model  921109-model1  AlertForAbdullah-model }
Define DisplayEntity { A  XY-Grid  XYZ-Axis }
Define OverlayClock { Clock }
Define OverlayText { Title }
Define View { View1 }

RouteDecosionTaking UnitType { DimensionlessUnit }
GeneratorDistribution UnitType { TimeUnit }
TicketCounterDistribution UnitType { TimeUnit }
FoodCounterDistribution UnitType { TimeUnit }
Statistics1 UnitType { TimeUnit }

Visitor AttributeDefinitionList { { visitedRides  0 } { placeInQ  0 } }

Simulation Description { 'Simulation run control inputs' }
Simulation RunDuration { 800  h }
Simulation GlobalSubstreamSeed { this.RunNumber }
Simulation PrintReport { TRUE }
Simulation RunOutputList { { this.RunNumber } { [Statistics1].SampleAverage/1[min] } { [Statistics1].SampleMinimum/1[min] } { [Statistics1].SampleMaximum/1[min] } { [Statistics1].TotalTime } { [Statistics1].TimeAverage } { [Statistics1].NumberProcessed } { '[Statistics1].EntityTimeAverage("EntranceQ1Time")' } { '[Statistics1].EntityTimeAverage("EntranceQ2Time")' } { '[Statistics1].EntityTimeAverage("EntranceQ3Time")' } { '[Statistics1].EntityTimeAverage("EntranceQ4Time")' } { '[Statistics1].EntityTimeAverage("FoodQTime")' } { '[Statistics1].EntityTimeAverage("RolarCoasterQTime")' } { '[Statistics1].EntityTimeAverage("CarouselQTime")' } { '[Statistics1].EntityTimeAverage("WaterSlideQTime")' } { '[Statistics1].EntityTimeAverage("FerrisWheelQTime")' } { '[Statistics1].EntityTimeAverage("CableCarQTime")' } }
Simulation EndingScenarioNumber { 10 }

# *** DiscreteDistribution ***

RouteDecosionTaking RandomSeed { 1 }
RouteDecosionTaking ValueList { 1  2  3  4  5  6  7 }
RouteDecosionTaking ProbabilityList { 0.14  0.2  0.12  0.06  0.16  0.2  0.12 }

# *** DiscreteUniformDistribution ***

EntriesPerArrivalDistribution RandomSeed { 5 }
EntriesPerArrivalDistribution MinValue { 1 }
EntriesPerArrivalDistribution MaxValue { 6 }

# *** ExponentialDistribution ***

GeneratorDistribution RandomSeed { 3 }
GeneratorDistribution Mean { 20  min }

TicketCounterDistribution RandomSeed { 2 }
TicketCounterDistribution Mean { 3  min }

# *** UniformDistribution ***

FoodCounterDistribution RandomSeed { 4 }
FoodCounterDistribution MinValue { 2  min }
FoodCounterDistribution MaxValue { 5  min }

# *** AddTo ***

AddTo1 NextComponent { Queue2 }
AddTo1 WaitQueue { CarouselQ }
AddTo1 NumberOfEntities { 50 }
AddTo1 ContainerQueue { Queue4 }

AddTo2 NextComponent { Queue1 }
AddTo2 WaitQueue { RolarQ }
AddTo2 NumberOfEntities { 70 }
AddTo2 ContainerQueue { Queue6 }

# *** Assign ***

Check NextComponent { RouteToRides }
Check AttributeAssignmentList { { 'this.obj.visitedRides = this.obj.visitedRides + 1' } }

# *** Branch ***

EntranceGate NextComponentList { EntranceQueue1  EntranceQueue2  EntranceQueue3  EntranceQueue4 }
EntranceGate Choice { 'indexOfMin([EntranceQueue1].QueueLength, [EntranceQueue2].QueueLength, [EntranceQueue3].QueueLength, [EntranceQueue4].QueueLength)' }

RouteToRides NextComponentList { wayToCableCar  wayToCarousel  wayToFerriswheel  wayToFoodCounter  wayToGo  wayToRolarCoaster  wayToWaterSlide }
RouteToRides Choice { 'this.obj.visitedRides == 7? 5:[RouteDecosionTaking].Value' }

# *** EntityConveyor ***

wayToCableCar NextComponent { CableQ }
wayToCableCar TravelTime { 10  min }

wayToCarousel NextComponent { CarouselQ }
wayToCarousel TravelTime { 10  min }

wayToFerriswheel NextComponent { FerrisQ }
wayToFerriswheel TravelTime { 10  min }

wayToFoodCounter NextComponent { FoodQ }
wayToFoodCounter TravelTime { 10  min }

wayToGo NextComponent { Statistics1 }

wayToRolarCoaster NextComponent { RolarQ }
wayToRolarCoaster TravelTime { 10  min }

wayToWaterSlide NextComponent { WaterQ }
wayToWaterSlide TravelTime { 10  min }

# *** EntityGenerator ***

EntityGenerator1 NextComponent { Queue4 }
EntityGenerator1 PrototypeEntity { EntityContainer1 }
EntityGenerator1 MaxNumber { 1 }

EntityGenerator2 NextComponent { Queue6 }
EntityGenerator2 PrototypeEntity { EntityContainer2 }
EntityGenerator2 MaxNumber { 1 }

VisitorArrivalGenerator NextComponent { EntranceGate }
VisitorArrivalGenerator InterArrivalTime { GeneratorDistribution }
VisitorArrivalGenerator EntitiesPerArrival { EntriesPerArrivalDistribution }
VisitorArrivalGenerator PrototypeEntity { Visitor }

# *** EntityLogger ***

EntityLogger1 DataSource { { 'this.obj.StateTimes("EntranceQ1Time")' } { 'this.obj.StateTimes("EntranceQ2Time")' } { 'this.obj.StateTimes("EntranceQ3Time")' } { 'this.obj.StateTimes("EntranceQ4Time")' } { 'this.obj.StateTimes("FoodQTime")' } { 'this.obj.StateTimes("RolarCoasterQTime")' } { 'this.obj.StateTimes("CarouselQTime")' } { 'this.obj.StateTimes("WaterRideQTime")' } { 'this.obj.StateTimes("FerrisWheelQTime")' } { 'this.obj.StateTimes("CableCarQTime")' } }
EntityLogger1 SeparateFiles { TRUE }
EntityLogger1 NextComponent { EntitySink1 }
EntityLogger1 TraceEntityStates { FALSE }

# *** EntityProcessor ***

CableCar NextComponent { Check }
CableCar WaitQueue { CableQ }
CableCar SelectionCondition { '[CableQ].QueueLength > 4' }
CableCar ResourceList { CableCarBox }
CableCar Capacity { 50 }
CableCar ServiceTime { 10  min }

FerrisWheel NextComponent { Check }
FerrisWheel WaitQueue { FerrisQ }
FerrisWheel SelectionCondition { '[FerrisQ].QueueLength > 4' }
FerrisWheel ResourceList { FreesiWheelCone }
FerrisWheel Capacity { 50 }
FerrisWheel ServiceTime { 20  min }

FoodCounter NextComponent { Check }
FoodCounter StateAssignment { FoodServerTime }
FoodCounter WaitQueue { FoodQ }
FoodCounter ServiceTime { FoodCounterDistribution }

WaterSlider NextComponent { Check }
WaterSlider StateAssignment { WaterSlideServerTime }
WaterSlider WaitQueue { WaterQ }
WaterSlider ResourceList { Slider }
WaterSlider Capacity { 15 }
WaterSlider ServiceTime { 2  min }

# *** Queue ***

CableQ StateAssignment { CableCarQTime }

CarouselQ StateAssignment { CarouselQTime }

EntranceQueue1 StateAssignment { EntranceQ1Time }

EntranceQueue2 StateAssignment { EntranceQ2Time }

EntranceQueue3 StateAssignment { EntranceQ3Time }

EntranceQueue4 StateAssignment { EntranceQ4Time }

FerrisQ StateAssignment { FerrisWheelQTime }

FoodQ StateAssignment { FoodQTime }

RolarQ StateAssignment { RolarCoasterQTime }

WaterQ StateAssignment { WaterSlideQTime }

# *** RemoveFrom ***

RemoveFrom1 NextComponent { Check }
RemoveFrom1 WaitQueue { Queue3 }
RemoveFrom1 NumberOfEntities { this.Container.Count }
RemoveFrom1 NextForContainers { Queue4 }

RemoveFrom2 NextComponent { Check }
RemoveFrom2 WaitQueue { Queue5 }
RemoveFrom2 NumberOfEntities { this.Container.Count }
RemoveFrom2 NextForContainers { Queue6 }

# *** Server ***

Carousel NextComponent { Queue3 }
Carousel WaitQueue { Queue2 }
Carousel ServiceTime { 10  min }

EntranceTicketCounter1 NextComponent { Check }
EntranceTicketCounter1 StateAssignment { EntranceServer1Time }
EntranceTicketCounter1 WaitQueue { EntranceQueue1 }
EntranceTicketCounter1 ServiceTime { TicketCounterDistribution }

EntranceTicketCounter2 NextComponent { Check }
EntranceTicketCounter2 StateAssignment { EntranceServer2Time }
EntranceTicketCounter2 WaitQueue { EntranceQueue2 }
EntranceTicketCounter2 ServiceTime { TicketCounterDistribution }

EntranceTicketCounter3 NextComponent { Check }
EntranceTicketCounter3 StateAssignment { EntranceServer3Time }
EntranceTicketCounter3 WaitQueue { EntranceQueue3 }
EntranceTicketCounter3 ServiceTime { TicketCounterDistribution }

EntranceTicketCounter4 NextComponent { Check }
EntranceTicketCounter4 StateAssignment { EntranceServer4Time }
EntranceTicketCounter4 WaitQueue { EntranceQueue4 }
EntranceTicketCounter4 ServiceTime { TicketCounterDistribution }

RolarCoaster NextComponent { Queue5 }
RolarCoaster WaitQueue { Queue1 }
RolarCoaster ServiceTime { 10  min }

# *** Statistics ***

Statistics1 NextComponent { EntityLogger1 }
Statistics1 SampleValue { this.obj.TotalTime }
Statistics1 RecordEntityStateTimes { TRUE }

# *** Resource ***

CableCarBox Capacity { 8 }

FreesiWheelCone Capacity { 8 }

Slider Capacity { 5 }

# *** GRAPHICS INPUTS ***

Simulation RealTime { TRUE }
Simulation SnapToGrid { FALSE }
Simulation RealTimeFactor { 1000000 }
Simulation ShowLabels { TRUE }
Simulation ShowSubModels { TRUE }
Simulation ShowReferences { FALSE }
Simulation ShowEntityFlow { TRUE }
Simulation ShowModelBuilder { TRUE }
Simulation ShowObjectSelector { TRUE }
Simulation ShowInputEditor { TRUE }
Simulation ShowOutputViewer { FALSE }
Simulation ShowPropertyViewer { FALSE }
Simulation ShowLogViewer { TRUE }
Simulation InputEditorPos { 220  488 }
Simulation InputEditorSize { 540  192 }

RouteDecosionTaking Position { 16.128928  -0.939504  0.0  m }

EntriesPerArrivalDistribution Position { -2.071444  -1.338051  0.0  m }

GeneratorDistribution Position { -3.965957  -3.204333  0.0  m }

TicketCounterDistribution Position { -1.275167  -6.05433  0.0  m }

FoodCounterDistribution Position { 41.324705  10.528338  0.0  m }

AddTo1 Position { 45.645876  -3.299804  0.0  m }

AddTo2 Position { 39.630326  5.149628  0.0  m }

Check Position { 13.589222  -2.720928  0.0  m }

EntranceGate Position { 2.414695  -3.315064  0.0  m }

RouteToRides Position { 16.377135  -2.675225  0.0  m }

EntityContainer1 Position { 43.336251  -7.191957  0.0  m }

EntityContainer2 Position { 39.578573  1.061157  0.0  m }

wayToCableCar Points { { 28.423995  -18.474975  0.0  m } { 29.423995  -18.474975  0.0  m } }

wayToCarousel Points { { 27.469537  -0.980152  0.0  m } { 28.469537  -0.980152  0.0  m } }

wayToFerriswheel Points { { 28.048424  -11.979062  0.0  m } { 29.048424  -11.979062  0.0  m } }

wayToFoodCounter Points { { 27.202353  10.330457  0.0  m } { 28.202353  10.330457  0.0  m } }

wayToGo Points { { 13.632934  -7.042095  0.0  m } { 14.632934  -7.042095  0.0  m } }

wayToRolarCoaster Points { { 27.425007  4.808743  0.0  m } { 28.425007  4.808743  0.0  m } }

wayToWaterSlide Points { { 28.003897  -6.234692  0.0  m } { 29.003897  -6.234692  0.0  m } }

EntityGenerator1 Position { 47.356716  -6.978103  0.0  m }

EntityGenerator2 Position { 44.805606  0.957652  0.0  m }

VisitorArrivalGenerator Position { -0.190404  -3.292212  0.0  m }

EntityLogger1 Position { 14.756289  -15.641023  0.0  m }

CableCar Position { 39.486765  -18.421688  0.0  m }

FerrisWheel Position { 39.237242  -11.795482  0.0  m }

FoodCounter Position { 37.164505  10.58473  0.0  m }

WaterSlider Position { 36.947303  -6.404189  0.0  m }

EntitySink1 Position { 14.55333  -19.091322  0.0  m }

CableQ Position { 36.577193  -18.508817  0.0  m }

CarouselQ Position { 42.737454  -3.342575  0.0  m }

EntranceQueue1 Position { 6.390899  -0.024412  0.0  m }

EntranceQueue2 Position { 6.459454  -1.692597  0.0  m }

EntranceQueue3 Position { 6.436602  -3.383626  0.0  m }

EntranceQueue4 Position { 6.550861  -4.983249  0.0  m }

FerrisQ Position { 36.70399  -11.848522  0.0  m }

FoodQ Position { 35.909567  10.544248  0.0  m }

Queue1 Position { 43.977561  5.201381  0.0  m }

Queue2 Position { 48.768155  -3.171492  0.0  m }

Queue3 Position { 54.285603  -3.043179  0.0  m }

Queue4 Position { 51.847661  -6.635935  0.0  m }

Queue5 Position { 51.947492  4.942617  0.0  m }

Queue6 Position { 48.738818  1.423427  0.0  m }

RolarQ Position { 35.639444  4.81905  0.0  m }

WaterQ Position { 35.761108  -6.282528  0.0  m }

RemoveFrom1 Position { 57.194025  -3.128721  0.0  m }

RemoveFrom2 Position { 55.311424  3.33828  0.0  m }

Carousel Position { 51.80489  -3.171492  0.0  m }

EntranceTicketCounter1 Position { 8.790332  -0.047271  0.0  m }

EntranceTicketCounter2 Position { 8.653222  -1.738301  0.0  m }

EntranceTicketCounter3 Position { 8.744629  -3.406478  0.0  m }

EntranceTicketCounter4 Position { 8.721777  -5.051804  0.0  m }

RolarCoaster Position { 48.531807  5.408392  0.0  m }

Visitor Position { -0.030442  -0.709965  0.0  m }
Visitor Alignment { 0.0  0.0  -0.5 }

Statistics1 Position { 14.899052  -11.042573  0.0  m }

CableCarBox Position { 42.564208  -18.477138  0.0  m }

FreesiWheelCone Position { 42.037438  -11.712308  0.0  m }

Slider Position { 38.650561  -6.434608  0.0  m }

# *** ColladaModel ***

Axis ColladaFile { <res>/shapes/axis_text.dae }

Grid100x100 ColladaFile { <res>/shapes/grid100x100.dae }

# *** DisplayEntity ***

A Size { 1.0  1.0  0.0  m }
A DisplayModel { 921109-model1 }

XY-Grid Description { 'Grid for the X-Y plane (100 m x 100 m)' }
XY-Grid Size { 100  100  m }
XY-Grid DisplayModel { Grid100x100 }
XY-Grid Show { FALSE }
XY-Grid Movable { FALSE }

XYZ-Axis Description { 'Unit vectors' }
XYZ-Axis Alignment { -0.4393409  -0.4410096  -0.4394292 }
XYZ-Axis Size { 1.125000  1.1568242  1.1266404  m }
XYZ-Axis DisplayModel { Axis }
XYZ-Axis Show { FALSE }
XYZ-Axis Movable { FALSE }

# *** OverlayClock ***

Clock Description { 'Simulation date and time' }
Clock ScreenPosition { 15  15 }
Clock AlignBottom { TRUE }
Clock TextHeight { 10 }
Clock FontColour { gray20 }
Clock FontStyle { ITALIC }
Clock DateFormat { 'yyyy-MMM-dd HH:mm:ss.SSS' }

# *** OverlayText ***

Title Description { 'Title for the simulation model' }
Title ScreenPosition { 15  15 }
Title Format { 'Theme Park Simulation' }
Title TextHeight { 18 }
Title FontColour { 150  23  46 }
Title FontStyle { BOLD }

# *** View ***

View1 Description { 'Default view window' }
View1 ViewCenter { 17.868971  -5.374106  24.484486  m }
View1 ViewPosition { 17.868971  -5.374106  56.701548  m }
View1 WindowSize { 1060  385 }
View1 WindowPosition { 220  103 }
View1 ShowWindow { TRUE }
View1 Lock2D { TRUE }
View1 SkyboxImage { <res>/images/sky_map_2048x1024.jpg }
